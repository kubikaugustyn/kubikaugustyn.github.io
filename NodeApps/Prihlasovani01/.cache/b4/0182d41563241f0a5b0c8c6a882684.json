{"id":"UNnr","dependencies":[{"name":"C:\\Users\\Radek Augustyn\\Desktop\\Kubik\\MujWeb\\NodeApps\\Prihlasovani01\\package.json","includedInParent":true,"mtime":1579542458413},{"name":"C:\\Users\\Radek Augustyn\\Desktop\\Kubik\\MujWeb\\NodeApps\\Prihlasovani01\\node_modules\\mongoose\\package.json","includedInParent":true,"mtime":1579334330931},{"name":"../error/cast","loc":{"line":3,"column":26},"parent":"C:\\Users\\Radek Augustyn\\Desktop\\Kubik\\MujWeb\\NodeApps\\Prihlasovani01\\node_modules\\mongoose\\lib\\cast\\boolean.js","resolved":"C:\\Users\\Radek Augustyn\\Desktop\\Kubik\\MujWeb\\NodeApps\\Prihlasovani01\\node_modules\\mongoose\\lib\\error\\cast.js"}],"generated":{"js":"\"use strict\";const e=require(\"../error/cast\");module.exports=function(o,r){if(null==o)return o;if(module.exports.convertToTrue.has(o))return!0;if(module.exports.convertToFalse.has(o))return!1;throw new e(\"boolean\",o,r)},module.exports.convertToTrue=new Set([!0,\"true\",1,\"1\",\"yes\"]),module.exports.convertToFalse=new Set([!1,\"false\",0,\"0\",\"no\"]);"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":3,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"CastError","original":{"line":3,"column":6},"generated":{"line":1,"column":19}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"require","original":{"line":3,"column":18},"generated":{"line":1,"column":21}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":3,"column":26},"generated":{"line":1,"column":29}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"module","original":{"line":16,"column":0},"generated":{"line":1,"column":46}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"exports","original":{"line":16,"column":7},"generated":{"line":1,"column":53}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":16,"column":17},"generated":{"line":1,"column":61}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"value","original":{"line":16,"column":38},"generated":{"line":1,"column":70}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"path","original":{"line":16,"column":45},"generated":{"line":1,"column":72}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"value","original":{"line":17,"column":6},"generated":{"line":1,"column":75}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":17,"column":15},"generated":{"line":1,"column":78}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"value","original":{"line":17,"column":6},"generated":{"line":1,"column":84}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"value","original":{"line":18,"column":11},"generated":{"line":1,"column":86}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"value","original":{"line":18,"column":11},"generated":{"line":1,"column":93}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"module","original":{"line":21,"column":6},"generated":{"line":1,"column":95}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"module","original":{"line":21,"column":6},"generated":{"line":1,"column":98}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"exports","original":{"line":21,"column":13},"generated":{"line":1,"column":105}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"convertToTrue","original":{"line":21,"column":21},"generated":{"line":1,"column":113}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"has","original":{"line":21,"column":35},"generated":{"line":1,"column":127}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"value","original":{"line":21,"column":39},"generated":{"line":1,"column":131}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":22,"column":11},"generated":{"line":1,"column":134}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":22,"column":11},"generated":{"line":1,"column":141}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"module","original":{"line":24,"column":6},"generated":{"line":1,"column":143}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"module","original":{"line":24,"column":6},"generated":{"line":1,"column":146}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"exports","original":{"line":24,"column":13},"generated":{"line":1,"column":153}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"convertToFalse","original":{"line":24,"column":21},"generated":{"line":1,"column":161}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"has","original":{"line":24,"column":36},"generated":{"line":1,"column":176}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"value","original":{"line":24,"column":40},"generated":{"line":1,"column":180}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":25,"column":11},"generated":{"line":1,"column":183}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":25,"column":11},"generated":{"line":1,"column":190}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":27,"column":8},"generated":{"line":1,"column":192}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":27,"column":8},"generated":{"line":1,"column":198}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"CastError","original":{"line":27,"column":12},"generated":{"line":1,"column":202}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":27,"column":22},"generated":{"line":1,"column":204}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"value","original":{"line":27,"column":33},"generated":{"line":1,"column":214}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"path","original":{"line":27,"column":40},"generated":{"line":1,"column":216}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"module","original":{"line":30,"column":0},"generated":{"line":1,"column":220}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"exports","original":{"line":30,"column":7},"generated":{"line":1,"column":227}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"convertToTrue","original":{"line":30,"column":15},"generated":{"line":1,"column":235}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":30,"column":31},"generated":{"line":1,"column":249}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"Set","original":{"line":30,"column":35},"generated":{"line":1,"column":253}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":30,"column":39},"generated":{"line":1,"column":257}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":30,"column":40},"generated":{"line":1,"column":259}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":30,"column":46},"generated":{"line":1,"column":261}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":30,"column":54},"generated":{"line":1,"column":268}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":30,"column":57},"generated":{"line":1,"column":270}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":30,"column":62},"generated":{"line":1,"column":274}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"module","original":{"line":31,"column":0},"generated":{"line":1,"column":282}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"exports","original":{"line":31,"column":7},"generated":{"line":1,"column":289}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"convertToFalse","original":{"line":31,"column":15},"generated":{"line":1,"column":297}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":31,"column":32},"generated":{"line":1,"column":312}},{"source":"node_modules/mongoose/lib/cast/boolean.js","name":"Set","original":{"line":31,"column":36},"generated":{"line":1,"column":316}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":31,"column":40},"generated":{"line":1,"column":320}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":31,"column":41},"generated":{"line":1,"column":322}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":31,"column":48},"generated":{"line":1,"column":324}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":31,"column":57},"generated":{"line":1,"column":332}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":31,"column":60},"generated":{"line":1,"column":334}},{"source":"node_modules/mongoose/lib/cast/boolean.js","original":{"line":31,"column":65},"generated":{"line":1,"column":338}}],"sources":{"node_modules/mongoose/lib/cast/boolean.js":"'use strict';\n\nconst CastError = require('../error/cast');\n\n/*!\n * Given a value, cast it to a boolean, or throw a `CastError` if the value\n * cannot be casted. `null` and `undefined` are considered valid.\n *\n * @param {Any} value\n * @param {String} [path] optional the path to set on the CastError\n * @return {Boolean|null|undefined}\n * @throws {CastError} if `value` is not one of the allowed values\n * @api private\n */\n\nmodule.exports = function castBoolean(value, path) {\n  if (value == null) {\n    return value;\n  }\n\n  if (module.exports.convertToTrue.has(value)) {\n    return true;\n  }\n  if (module.exports.convertToFalse.has(value)) {\n    return false;\n  }\n  throw new CastError('boolean', value, path);\n};\n\nmodule.exports.convertToTrue = new Set([true, 'true', 1, '1', 'yes']);\nmodule.exports.convertToFalse = new Set([false, 'false', 0, '0', 'no']);\n"},"lineCount":null}},"error":null,"hash":"d1f2ba7d1352fa2f4e6e5944693941b0","cacheData":{"env":{}}}