{"id":"iTOy","dependencies":[{"name":"C:\\Users\\Radek Augustyn\\Desktop\\Kubik\\MujWeb\\NodeApps\\Prihlasovani01\\package.json","includedInParent":true,"mtime":1579542458413},{"name":"C:\\Users\\Radek Augustyn\\Desktop\\Kubik\\MujWeb\\NodeApps\\Prihlasovani01\\node_modules\\mongoose\\package.json","includedInParent":true,"mtime":1579334330931},{"name":"../error/cast","loc":{"line":3,"column":26},"parent":"C:\\Users\\Radek Augustyn\\Desktop\\Kubik\\MujWeb\\NodeApps\\Prihlasovani01\\node_modules\\mongoose\\lib\\cast\\string.js","resolved":"C:\\Users\\Radek Augustyn\\Desktop\\Kubik\\MujWeb\\NodeApps\\Prihlasovani01\\node_modules\\mongoose\\lib\\error\\cast.js"}],"generated":{"js":"\"use strict\";const r=require(\"../error/cast\");module.exports=function(t,i){if(null==t)return t;if(t._id&&\"string\"==typeof t._id)return t._id;if(t.toString&&t.toString!==Object.prototype.toString&&!Array.isArray(t))return t.toString();throw new r(\"string\",t,i)};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mongoose/lib/cast/string.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mongoose/lib/cast/string.js","original":{"line":3,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"CastError","original":{"line":3,"column":6},"generated":{"line":1,"column":19}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"require","original":{"line":3,"column":18},"generated":{"line":1,"column":21}},{"source":"node_modules/mongoose/lib/cast/string.js","original":{"line":3,"column":26},"generated":{"line":1,"column":29}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"module","original":{"line":16,"column":0},"generated":{"line":1,"column":46}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"exports","original":{"line":16,"column":7},"generated":{"line":1,"column":53}},{"source":"node_modules/mongoose/lib/cast/string.js","original":{"line":16,"column":17},"generated":{"line":1,"column":61}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"value","original":{"line":16,"column":37},"generated":{"line":1,"column":70}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"path","original":{"line":16,"column":44},"generated":{"line":1,"column":72}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"value","original":{"line":18,"column":6},"generated":{"line":1,"column":75}},{"source":"node_modules/mongoose/lib/cast/string.js","original":{"line":18,"column":15},"generated":{"line":1,"column":78}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"value","original":{"line":18,"column":6},"generated":{"line":1,"column":84}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"value","original":{"line":19,"column":11},"generated":{"line":1,"column":86}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"value","original":{"line":19,"column":11},"generated":{"line":1,"column":93}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"value","original":{"line":23,"column":6},"generated":{"line":1,"column":95}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"value","original":{"line":23,"column":6},"generated":{"line":1,"column":98}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"_id","original":{"line":23,"column":12},"generated":{"line":1,"column":100}},{"source":"node_modules/mongoose/lib/cast/string.js","original":{"line":23,"column":40},"generated":{"line":1,"column":105}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"value","original":{"line":23,"column":26},"generated":{"line":1,"column":122}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"_id","original":{"line":23,"column":32},"generated":{"line":1,"column":124}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"value","original":{"line":24,"column":11},"generated":{"line":1,"column":128}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"value","original":{"line":24,"column":11},"generated":{"line":1,"column":135}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"_id","original":{"line":24,"column":17},"generated":{"line":1,"column":137}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"value","original":{"line":30,"column":6},"generated":{"line":1,"column":141}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"value","original":{"line":30,"column":6},"generated":{"line":1,"column":144}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"toString","original":{"line":30,"column":12},"generated":{"line":1,"column":146}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"value","original":{"line":31,"column":6},"generated":{"line":1,"column":156}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"toString","original":{"line":31,"column":12},"generated":{"line":1,"column":158}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"Object","original":{"line":31,"column":25},"generated":{"line":1,"column":169}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"prototype","original":{"line":31,"column":32},"generated":{"line":1,"column":176}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"toString","original":{"line":31,"column":42},"generated":{"line":1,"column":186}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"Array","original":{"line":32,"column":7},"generated":{"line":1,"column":197}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"isArray","original":{"line":32,"column":13},"generated":{"line":1,"column":203}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"value","original":{"line":32,"column":21},"generated":{"line":1,"column":211}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"value","original":{"line":33,"column":11},"generated":{"line":1,"column":214}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"value","original":{"line":33,"column":11},"generated":{"line":1,"column":221}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"toString","original":{"line":33,"column":17},"generated":{"line":1,"column":223}},{"source":"node_modules/mongoose/lib/cast/string.js","original":{"line":36,"column":8},"generated":{"line":1,"column":234}},{"source":"node_modules/mongoose/lib/cast/string.js","original":{"line":36,"column":8},"generated":{"line":1,"column":240}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"CastError","original":{"line":36,"column":12},"generated":{"line":1,"column":244}},{"source":"node_modules/mongoose/lib/cast/string.js","original":{"line":36,"column":22},"generated":{"line":1,"column":246}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"value","original":{"line":36,"column":32},"generated":{"line":1,"column":255}},{"source":"node_modules/mongoose/lib/cast/string.js","name":"path","original":{"line":36,"column":39},"generated":{"line":1,"column":257}}],"sources":{"node_modules/mongoose/lib/cast/string.js":"'use strict';\n\nconst CastError = require('../error/cast');\n\n/*!\n * Given a value, cast it to a string, or throw a `CastError` if the value\n * cannot be casted. `null` and `undefined` are considered valid.\n *\n * @param {Any} value\n * @param {String} [path] optional the path to set on the CastError\n * @return {string|null|undefined}\n * @throws {CastError}\n * @api private\n */\n\nmodule.exports = function castString(value, path) {\n  // If null or undefined\n  if (value == null) {\n    return value;\n  }\n\n  // handle documents being passed\n  if (value._id && typeof value._id === 'string') {\n    return value._id;\n  }\n\n  // Re: gh-647 and gh-3030, we're ok with casting using `toString()`\n  // **unless** its the default Object.toString, because \"[object Object]\"\n  // doesn't really qualify as useful data\n  if (value.toString &&\n      value.toString !== Object.prototype.toString &&\n      !Array.isArray(value)) {\n    return value.toString();\n  }\n\n  throw new CastError('string', value, path);\n};\n"},"lineCount":null}},"error":null,"hash":"0cdb66f8d63c06bc852502f07d2a0562","cacheData":{"env":{}}}