{"id":"node_modules/crc/lib/crc8_1wire.js","dependencies":[{"name":"C:\\Users\\Radek Augustyn\\Desktop\\Kubik\\MujWeb\\NodeApps\\Prihlasovani01\\package.json","includedInParent":true,"mtime":1579542343022},{"name":"C:\\Users\\Radek Augustyn\\Desktop\\Kubik\\MujWeb\\NodeApps\\Prihlasovani01\\node_modules\\crc\\package.json","includedInParent":true,"mtime":1579334330491},{"name":"buffer","loc":{"line":3,"column":22},"parent":"C:\\Users\\Radek Augustyn\\Desktop\\Kubik\\MujWeb\\NodeApps\\Prihlasovani01\\node_modules\\crc\\lib\\crc8_1wire.js","resolved":"C:\\Users\\Radek Augustyn\\Desktop\\Kubik\\MujWeb\\NodeApps\\Prihlasovani01\\node_modules\\buffer\\index.js"},{"name":"./create_buffer","loc":{"line":5,"column":29},"parent":"C:\\Users\\Radek Augustyn\\Desktop\\Kubik\\MujWeb\\NodeApps\\Prihlasovani01\\node_modules\\crc\\lib\\crc8_1wire.js","resolved":"C:\\Users\\Radek Augustyn\\Desktop\\Kubik\\MujWeb\\NodeApps\\Prihlasovani01\\node_modules\\crc\\lib\\create_buffer.js"},{"name":"./define_crc","loc":{"line":9,"column":26},"parent":"C:\\Users\\Radek Augustyn\\Desktop\\Kubik\\MujWeb\\NodeApps\\Prihlasovani01\\node_modules\\crc\\lib\\crc8_1wire.js","resolved":"C:\\Users\\Radek Augustyn\\Desktop\\Kubik\\MujWeb\\NodeApps\\Prihlasovani01\\node_modules\\crc\\lib\\define_crc.js"}],"generated":{"js":"'use strict';\n\nvar _buffer = require('buffer');\n\nvar _create_buffer = require('./create_buffer');\n\nvar _create_buffer2 = _interopRequireDefault(_create_buffer);\n\nvar _define_crc = require('./define_crc');\n\nvar _define_crc2 = _interopRequireDefault(_define_crc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=dallas-1-wire --generate=c`\nvar TABLE = [0x00, 0x5e, 0xbc, 0xe2, 0x61, 0x3f, 0xdd, 0x83, 0xc2, 0x9c, 0x7e, 0x20, 0xa3, 0xfd, 0x1f, 0x41, 0x9d, 0xc3, 0x21, 0x7f, 0xfc, 0xa2, 0x40, 0x1e, 0x5f, 0x01, 0xe3, 0xbd, 0x3e, 0x60, 0x82, 0xdc, 0x23, 0x7d, 0x9f, 0xc1, 0x42, 0x1c, 0xfe, 0xa0, 0xe1, 0xbf, 0x5d, 0x03, 0x80, 0xde, 0x3c, 0x62, 0xbe, 0xe0, 0x02, 0x5c, 0xdf, 0x81, 0x63, 0x3d, 0x7c, 0x22, 0xc0, 0x9e, 0x1d, 0x43, 0xa1, 0xff, 0x46, 0x18, 0xfa, 0xa4, 0x27, 0x79, 0x9b, 0xc5, 0x84, 0xda, 0x38, 0x66, 0xe5, 0xbb, 0x59, 0x07, 0xdb, 0x85, 0x67, 0x39, 0xba, 0xe4, 0x06, 0x58, 0x19, 0x47, 0xa5, 0xfb, 0x78, 0x26, 0xc4, 0x9a, 0x65, 0x3b, 0xd9, 0x87, 0x04, 0x5a, 0xb8, 0xe6, 0xa7, 0xf9, 0x1b, 0x45, 0xc6, 0x98, 0x7a, 0x24, 0xf8, 0xa6, 0x44, 0x1a, 0x99, 0xc7, 0x25, 0x7b, 0x3a, 0x64, 0x86, 0xd8, 0x5b, 0x05, 0xe7, 0xb9, 0x8c, 0xd2, 0x30, 0x6e, 0xed, 0xb3, 0x51, 0x0f, 0x4e, 0x10, 0xf2, 0xac, 0x2f, 0x71, 0x93, 0xcd, 0x11, 0x4f, 0xad, 0xf3, 0x70, 0x2e, 0xcc, 0x92, 0xd3, 0x8d, 0x6f, 0x31, 0xb2, 0xec, 0x0e, 0x50, 0xaf, 0xf1, 0x13, 0x4d, 0xce, 0x90, 0x72, 0x2c, 0x6d, 0x33, 0xd1, 0x8f, 0x0c, 0x52, 0xb0, 0xee, 0x32, 0x6c, 0x8e, 0xd0, 0x53, 0x0d, 0xef, 0xb1, 0xf0, 0xae, 0x4c, 0x12, 0x91, 0xcf, 0x2d, 0x73, 0xca, 0x94, 0x76, 0x28, 0xab, 0xf5, 0x17, 0x49, 0x08, 0x56, 0xb4, 0xea, 0x69, 0x37, 0xd5, 0x8b, 0x57, 0x09, 0xeb, 0xb5, 0x36, 0x68, 0x8a, 0xd4, 0x95, 0xcb, 0x29, 0x77, 0xf4, 0xaa, 0x48, 0x16, 0xe9, 0xb7, 0x55, 0x0b, 0x88, 0xd6, 0x34, 0x6a, 0x2b, 0x75, 0x97, 0xc9, 0x4a, 0x14, 0xf6, 0xa8, 0x74, 0x2a, 0xc8, 0x96, 0x15, 0x4b, 0xa9, 0xf7, 0xb6, 0xe8, 0x0a, 0x54, 0xd7, 0x89, 0x6b, 0x35];\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nmodule.exports = (0, _define_crc2.default)('dallas-1-wire', function (buf, previous) {\n  if (!_buffer.Buffer.isBuffer(buf)) buf = (0, _create_buffer2.default)(buf);\n\n  var crc = ~~previous;\n\n  for (var index = 0; index < buf.length; index++) {\n    var byte = buf[index];\n    crc = TABLE[(crc ^ byte) & 0xff] & 0xff;\n  }\n\n  return crc;\n});"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/crc/lib/crc8_1wire.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}}],"sources":{"node_modules/crc/lib/crc8_1wire.js":"'use strict';\n\nvar _buffer = require('buffer');\n\nvar _create_buffer = require('./create_buffer');\n\nvar _create_buffer2 = _interopRequireDefault(_create_buffer);\n\nvar _define_crc = require('./define_crc');\n\nvar _define_crc2 = _interopRequireDefault(_define_crc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=dallas-1-wire --generate=c`\nvar TABLE = [0x00, 0x5e, 0xbc, 0xe2, 0x61, 0x3f, 0xdd, 0x83, 0xc2, 0x9c, 0x7e, 0x20, 0xa3, 0xfd, 0x1f, 0x41, 0x9d, 0xc3, 0x21, 0x7f, 0xfc, 0xa2, 0x40, 0x1e, 0x5f, 0x01, 0xe3, 0xbd, 0x3e, 0x60, 0x82, 0xdc, 0x23, 0x7d, 0x9f, 0xc1, 0x42, 0x1c, 0xfe, 0xa0, 0xe1, 0xbf, 0x5d, 0x03, 0x80, 0xde, 0x3c, 0x62, 0xbe, 0xe0, 0x02, 0x5c, 0xdf, 0x81, 0x63, 0x3d, 0x7c, 0x22, 0xc0, 0x9e, 0x1d, 0x43, 0xa1, 0xff, 0x46, 0x18, 0xfa, 0xa4, 0x27, 0x79, 0x9b, 0xc5, 0x84, 0xda, 0x38, 0x66, 0xe5, 0xbb, 0x59, 0x07, 0xdb, 0x85, 0x67, 0x39, 0xba, 0xe4, 0x06, 0x58, 0x19, 0x47, 0xa5, 0xfb, 0x78, 0x26, 0xc4, 0x9a, 0x65, 0x3b, 0xd9, 0x87, 0x04, 0x5a, 0xb8, 0xe6, 0xa7, 0xf9, 0x1b, 0x45, 0xc6, 0x98, 0x7a, 0x24, 0xf8, 0xa6, 0x44, 0x1a, 0x99, 0xc7, 0x25, 0x7b, 0x3a, 0x64, 0x86, 0xd8, 0x5b, 0x05, 0xe7, 0xb9, 0x8c, 0xd2, 0x30, 0x6e, 0xed, 0xb3, 0x51, 0x0f, 0x4e, 0x10, 0xf2, 0xac, 0x2f, 0x71, 0x93, 0xcd, 0x11, 0x4f, 0xad, 0xf3, 0x70, 0x2e, 0xcc, 0x92, 0xd3, 0x8d, 0x6f, 0x31, 0xb2, 0xec, 0x0e, 0x50, 0xaf, 0xf1, 0x13, 0x4d, 0xce, 0x90, 0x72, 0x2c, 0x6d, 0x33, 0xd1, 0x8f, 0x0c, 0x52, 0xb0, 0xee, 0x32, 0x6c, 0x8e, 0xd0, 0x53, 0x0d, 0xef, 0xb1, 0xf0, 0xae, 0x4c, 0x12, 0x91, 0xcf, 0x2d, 0x73, 0xca, 0x94, 0x76, 0x28, 0xab, 0xf5, 0x17, 0x49, 0x08, 0x56, 0xb4, 0xea, 0x69, 0x37, 0xd5, 0x8b, 0x57, 0x09, 0xeb, 0xb5, 0x36, 0x68, 0x8a, 0xd4, 0x95, 0xcb, 0x29, 0x77, 0xf4, 0xaa, 0x48, 0x16, 0xe9, 0xb7, 0x55, 0x0b, 0x88, 0xd6, 0x34, 0x6a, 0x2b, 0x75, 0x97, 0xc9, 0x4a, 0x14, 0xf6, 0xa8, 0x74, 0x2a, 0xc8, 0x96, 0x15, 0x4b, 0xa9, 0xf7, 0xb6, 0xe8, 0x0a, 0x54, 0xd7, 0x89, 0x6b, 0x35];\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nmodule.exports = (0, _define_crc2.default)('dallas-1-wire', function (buf, previous) {\n  if (!_buffer.Buffer.isBuffer(buf)) buf = (0, _create_buffer2.default)(buf);\n\n  var crc = ~~previous;\n\n  for (var index = 0; index < buf.length; index++) {\n    var byte = buf[index];\n    crc = TABLE[(crc ^ byte) & 0xff] & 0xff;\n  }\n\n  return crc;\n});"},"lineCount":31}},"error":null,"hash":"8534d4acd80d6c64df7eda137cb703db","cacheData":{"env":{}}}